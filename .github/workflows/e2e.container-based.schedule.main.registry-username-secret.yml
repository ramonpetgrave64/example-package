on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:

permissions: read-all

concurrency: "e2e.container-based.schedule.main.registry-username-secret"

env:
  # TODO: Replace this token.
  GH_TOKEN: ${{ secrets.E2E_CONTAINER_TOKEN }}
  ISSUE_REPOSITORY: slsa-framework/slsa-github-generator

  PROVENANCE_NAME: attestation.intoto

  IMAGE_REGISTRY: ghcr.io
  # NOTE: We reuse the registry-username test image.
  # The image name should be of the form: slsa-framework/example-package.<test name>
  IMAGE_NAME: slsa-framework/example-package.e2e.container-based.schedule.main.registry-username.slsa3

  REGISTRY_USERNAME: asraa
  REGISTRY_PASSWORD: ${{ secrets.E2E_DOCKER_TOKEN }}

jobs:
  base:
    runs-on: ubuntu-latest
    permissions:
      contents: read # For reading repository contents.
      packages: write # For writing container images.
    outputs:
      image: ${{ steps.image.outputs.image }}
      digest: ${{ steps.image.outputs.digest }}
    steps:
      - name: Authenticate Docker
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${REGISTRY_USERNAME}
          password: ${{ secrets.E2E_DOCKER_TOKEN }}

      - name: Output image
        id: image
        run: |
          # NOTE: We need to use the image and digest in order to make sure
          # that the image we attest has not been modified.
          full_image_name="${IMAGE_REGISTRY}/${IMAGE_NAME}"
          docker pull "${full_image_name}:main"
          repo_digest=$(docker inspect --format='{{index .RepoDigests 0}}' "${full_image_name}:main")
          echo "${repo_digest}"

          echo "image=${full_image_name}" >> "${GITHUB_OUTPUT}"
          echo "digest=${repo_digest#*@}" >> "${GITHUB_OUTPUT}"

  build:
    permissions:
      id-token: write # For signing
      actions: read
      contents: write # For asset uploads
    needs: [base]
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_container-based_slsa3.yml@main
    with:
      builder-image: ${{ needs.base.outputs.image }}
      builder-digest: ${{ needs.base.outputs.digest }}
      config-path: ".github/configs-docker/app-config.toml"
      provenance-name: attestation.intoto
      compile-builder: true
    secrets:
      registry-username: ${REGISTRY_USERNAME}
      registry-password: ${{ secrets.E2E_DOCKER_TOKEN }}

  verify:
    runs-on: ubuntu-latest
    needs: [base, build]
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: ${{ needs.build.outputs.build-outputs-name }}
          path: outputs
      - name: Get build artifact
        id: build
        run: |
          name=$(find outputs/ -type f | head -1)
          cp "${name}" .
          echo "name=$(basename "${name}")" >> "${GITHUB_OUTPUT}"
      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: ${{ needs.build.outputs.attestations-download-name }}
          path: attestations
      - name: Get attestation
        id: att
        env:
          FOLDER: attestations
        run: |
          name=$(find "${FOLDER}"/ -type f | head -1)
          cp "${name}" .
          echo "name=$(basename "${name}")" >> "${GITHUB_OUTPUT}"
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: "1.21"
      - env:
          BINARY: ${{ steps.build.outputs.name }}
          PROVENANCE: ${{ steps.att.outputs.name }}
        run: ./.github/workflows/scripts/e2e.container-based.default.verify.sh

  if-succeeded:
    runs-on: ubuntu-latest
    needs: [build, verify]
    # NOTE: The workflow is allowed to run for other event types but don't post
    # to issues unless it's a schedule event.
    if: github.event_name == 'schedule' && needs.build.result == 'success' && needs.verify.result == 'success'
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - run: ./.github/workflows/scripts/e2e-report-success.sh

  if-failed:
    runs-on: ubuntu-latest
    needs: [build, verify]
    # NOTE: The workflow is allowed to run for other event types but don't post
    # to issues unless it's a schedule event.
    if: always() && github.event_name == 'schedule' && (needs.build.result == 'failure' || needs.verify.result == 'failure')
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - run: ./.github/workflows/scripts/e2e-report-failure.sh
