on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:

permissions: read-all

concurrency: "e2e.generic.workflow_dispatch.main.large-subjects-adversarial-format.slsa3"

env:
  GH_TOKEN: ${{ secrets.E2E_GENERIC_TOKEN }}
  ISSUE_REPOSITORY: slsa-framework/slsa-github-generator

jobs:
  dispatch:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    permissions:
      actions: write
      contents: write
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - run: ./.github/workflows/scripts/e2e-dispatch.sh

  build:
    if: github.event_name == 'workflow_dispatch'
    outputs:
      binary-name: ${{ steps.build.outputs.binary-name }}
      handle: ${{ steps.patchedhandle.outputs.handle }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build artifact
        id: build
        run: |
          echo "hello world" > hello
          echo "binary-name=hello" >> "${GITHUB_OUTPUT}"
      - name: Upload binary
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: ${{ steps.build.outputs.binary-name }}
          path: ${{ steps.build.outputs.binary-name }}
          if-no-files-found: error
          retention-days: 5
      - name: Generate hash
        shell: bash
        id: hash
        env:
          BINARY_NAME: ${{ steps.build.outputs.binary-name }}
        run: |
          set -euo pipefail

          outfile="tmp_file"
          sha256sum "$BINARY_NAME" > "$outfile"
          base64 -w0 "${outfile}" > digests.txt

      - name: Share the file
        id: sharedfile
        uses: slsa-framework/slsa-github-generator/actions/generator/generic/create-base64-subjects-from-file@main
        with:
          path: digests.txt

      - name: Alter the sha256
        shell: bash
        id: patchedhandle
        env:
          HANDLE: ${{ steps.sharedfile.outputs.handle }}
        run: |
          set -euo pipefail

          patched_handle=$(echo "$HANDLE" | base64 -d | jq '.filename = ""' | base64 -w0)
          echo "handle=$patched_handle" >> "${GITHUB_OUTPUT}"

  provenance:
    if: github.event_name == 'workflow_dispatch'
    needs: [build]
    permissions:
      id-token: write # For signing.
      contents: write # For asset uploads.
      actions: read # For the entrypoint.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@main
    with:
      base64-subjects-as-file: "${{ needs.build.outputs.handle }}"
      compile-generator: true

  if-build-failed:
    runs-on: ubuntu-latest
    needs: [build]
    if: always() && github.event_name == 'workflow_dispatch' && needs.build.result == 'failure'
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - run: ./.github/workflows/scripts/e2e-report-failure.sh

  if-provenance-succeeded:
    runs-on: ubuntu-latest
    needs: [build, provenance]
    # WARNING: This must only contain success statements.
    if: github.event_name == 'workflow_dispatch' && needs.provenance.result == 'success'
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - run: ./.github/workflows/scripts/e2e-report-failure.sh

  if-provenance-failed:
    runs-on: ubuntu-latest
    needs: [build, provenance]
    if: always() && github.event_name == 'workflow_dispatch' && needs.provenance.result == 'failure'
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - run: ./.github/workflows/scripts/e2e-report-success.sh
